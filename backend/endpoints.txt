Backend Endpoint List

Generic endpoints

/api/cities/{name}

Method: GET
Parameters: none
Path Variables:
    name: Optional parameter. If left blank, a list of all cities in the database will be returned. Otherwise,
            all entries containing the value will be returned, for example /api/cities/Lub will return Lublin and Lubin.

Returns: Array of cities matching the query. Can be empty.



User endpoints  - /api/users/

/register

Method: POST
Path Variables: none
Body:
{
    "name" //First name
    "surname" //Last name
    "email" //Email
    "govID" //Government ID number
    "birthDate" //Date of birth. Format "dd-MM-yyyy"
    "province" //Province
    "city": //City
    "postalCode" //Postal Code,
    "phoneNumber": //Phone number. Saved as a String to ensure compatibility with international formats
    "street": //Street name
    "number": //Street number. Saved as a String to ensure compatibility with all formats, such as "street_number/flat_number"
    "password" //plain-text password
}

Returns:

Status code: 400
Message: Missing fields in body
Fields: [Array]

Reason: Required body fields are missing. Fields listed in the array provided


Status code: 409
Message: This email or person is already registered

Reason: Email or GovID already exist in the database

Status code: 200
Message: Success

Reason: Default, no error


/login

Method: POST
Body:
{
"email" //email
"password" //password
}

Returns:

Status code: 400
Message: Missing fields in body
Fields: [Array]

Reason: Required body fields are missing. Fields listed in the array provided

Status code: 401
Message: Invalid email or password

Reason: User with the given email does not exist in the database or the password does not match

Status code: 200
Message: Success

Reason: Default, no error


/logout

Method: GET
No parameters

Returns:
Status code: 200


/resetpassword?address=

Method: Get
Parameters:
    address: email address for the account reset

Returns:

Returns:

Status code: 400
Message: Missing email in request parameters

Reason: The address parameter in the URL must be provided.


Status code: 500
Message: the mail service threw an error
Error: [String]

Reason: The mail service threw an unexpected error. The error is included in the response.


Status code: 200
Message: password reset mail has been sent, if the account exists

Reason: If no other error has been caught, the backend returns 200 OK, regardless of whether the account exists or not



/resetpassword

Method: POST
Body:
{
    "token" //Password reset token generated by the GET endpoint and sent via mail
    "password" //The new password
}

Returns:

Status code: 400
Message: Missing fields in body
Fields: [Array]

Reason: Required body fields are missing. Fields listed in the array provided


Status code: 410
Message: Token invalid or expired

Reason: Provided token has either expired or is invalid


Status code: 500
Message:invalid user referenced by token


Reason: This should NEVER happen. Only possible if the email referenced by the token has been corrupted or changed manually after the password reset request has been sent.

Status code: 200
Message: Password reset successfully

Reason: Password has been reset successfully.



/search/{type}/{query}

Method: GET
Path Variables:
    type: Decides whether to search doctors and institutions by name or by specialisations (types in case of institutions). Accepted values are by-spec and by-name
    query: String that gets looked in the database. Can match to name or surname of a doctor, name of an institution or specialisation, depending on the "type" variable

Returns:

Status code: 400
Message: unknown query type

Reason: "type" if of value different than by-name or by-spec


Status code: 200
Fields:
    "institutions": [Array]
    "doctors": [Array]

Reason: Regardless of the amount of doctors and institutions matching a given query, result is always 200 OK.






